<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cdtu.mapper.PublishWorkMapper" >
  <resultMap id="BaseResultMap" type="com.cdtu.model.PublishWork" >
    <id column="pw_id" property="pwId" jdbcType="CHAR" />
    <result column="tsc_id" property="tscId" jdbcType="INTEGER" />
    <result column="ct_id" property="ctId" jdbcType="INTEGER" />
    <result column="pw_score" property="pwScore" jdbcType="INTEGER" />
    <result column="pw_end" property="pwEnd" jdbcType="DATE" />
    <result column="pw_state" property="pwState" jdbcType="BIT" />
    <result column="pw_name" property="pwName" jdbcType="LONGVARCHAR" />
    <result column="pw_content" property="pwContent" jdbcType="CHAR" />
    <result column="activityImgSrc" property="activityImgSrc" jdbcType="CHAR" />
    <result column="wScore" property="wScore" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.cdtu.model.PublishWork" extends="BaseResultMap" >
    <result column="pw_name" property="pwName" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    pw_id, tsc_id, ct_id, pw_end, pw_state
  </sql>
  <sql id="Blob_Column_List" >
    pw_name
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.cdtu.model.PublishWorkExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from publish_work
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.cdtu.model.PublishWorkExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from publish_work
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from publish_work
    where pw_id = #{pwId,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from publish_work
    where pw_id = #{pwId,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.cdtu.model.PublishWorkExample" >
    delete from publish_work
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cdtu.model.PublishWork" >
    insert into publish_work (pw_id, tsc_id, ct_id, 
      pw_end, pw_state, pw_name
      )
    values (#{pwId,jdbcType=CHAR}, #{tscId,jdbcType=INTEGER}, #{ctId,jdbcType=INTEGER}, 
      #{pwEnd,jdbcType=DATE}, #{pwState,jdbcType=BIT}, #{pwName,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cdtu.model.PublishWork" >
    insert into publish_work
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="pwId != null" >
        pw_id,
      </if>
      <if test="tscId != null" >
        tsc_id,
      </if>
      <if test="ctId != null" >
        ct_id,
      </if>
      <if test="pwEnd != null" >
        pw_end,
      </if>
      <if test="pwState != null" >
        pw_state,
      </if>
      <if test="pwName != null" >
        pw_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="pwId != null" >
        #{pwId,jdbcType=CHAR},
      </if>
      <if test="tscId != null" >
        #{tscId,jdbcType=INTEGER},
      </if>
      <if test="ctId != null" >
        #{ctId,jdbcType=INTEGER},
      </if>
      <if test="pwEnd != null" >
        #{pwEnd,jdbcType=DATE},
      </if>
      <if test="pwState != null" >
        #{pwState,jdbcType=BIT},
      </if>
      <if test="pwName != null" >
        #{pwName,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cdtu.model.PublishWorkExample" resultType="java.lang.Integer" >
    select count(*) from publish_work
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update publish_work
    <set >
      <if test="record.pwId != null" >
        pw_id = #{record.pwId,jdbcType=CHAR},
      </if>
      <if test="record.tscId != null" >
        tsc_id = #{record.tscId,jdbcType=INTEGER},
      </if>
      <if test="record.ctId != null" >
        ct_id = #{record.ctId,jdbcType=INTEGER},
      </if>
      <if test="record.pwEnd != null" >
        pw_end = #{record.pwEnd,jdbcType=DATE},
      </if>
      <if test="record.pwState != null" >
        pw_state = #{record.pwState,jdbcType=BIT},
      </if>
      <if test="record.pwName != null" >
        pw_name = #{record.pwName,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update publish_work
    set pw_id = #{record.pwId,jdbcType=CHAR},
      tsc_id = #{record.tscId,jdbcType=INTEGER},
      ct_id = #{record.ctId,jdbcType=INTEGER},
      pw_end = #{record.pwEnd,jdbcType=DATE},
      pw_state = #{record.pwState,jdbcType=BIT},
      pw_name = #{record.pwName,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update publish_work
    set pw_id = #{record.pwId,jdbcType=CHAR},
      tsc_id = #{record.tscId,jdbcType=INTEGER},
      ct_id = #{record.ctId,jdbcType=INTEGER},
      pw_end = #{record.pwEnd,jdbcType=DATE},
      pw_state = #{record.pwState,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cdtu.model.PublishWork" >
    update publish_work
    <set >
      <if test="tscId != null" >
        tsc_id = #{tscId,jdbcType=INTEGER},
      </if>
      <if test="ctId != null" >
        ct_id = #{ctId,jdbcType=INTEGER},
      </if>
      <if test="pwEnd != null" >
        pw_end = #{pwEnd,jdbcType=DATE},
      </if>
      <if test="pwState != null" >
        pw_state = #{pwState,jdbcType=BIT},
      </if>
      <if test="pwName != null" >
        pw_name = #{pwName,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where pw_id = #{pwId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.cdtu.model.PublishWork" >
    update publish_work
    set tsc_id = #{tscId,jdbcType=INTEGER},
      ct_id = #{ctId,jdbcType=INTEGER},
      pw_end = #{pwEnd,jdbcType=DATE},
      pw_state = #{pwState,jdbcType=BIT},
      pw_name = #{pwName,jdbcType=LONGVARCHAR}
    where pw_id = #{pwId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cdtu.model.PublishWork" >
    update publish_work
    set tsc_id = #{tscId,jdbcType=INTEGER},
      ct_id = #{ctId,jdbcType=INTEGER},
      pw_end = #{pwEnd,jdbcType=DATE},
      pw_state = #{pwState,jdbcType=BIT}
    where pw_id = #{pwId,jdbcType=CHAR}
  </update>
  
  
  <!-- 添加含有tscid的发布作业 by:黎睿-->
	<insert id="insterBycId" parameterType="com.cdtu.model.PublishWork">
		INSERT INTO
		publish_work(pw_id,tsc_id,pw_name,pw_end,pw_state,pw_content,pw_score)
		VALUES(#{pwId},#{tscId},#{pwName},#{pwEnd},#{pwState},#{pwContent},#{pwScore})
	</insert>
  <!-- 教师查找tsc_id by:黎睿-->
	<select id="selectTscid" parameterType="String" resultType="java.lang.Integer">
		SELECT 
		teacher_select_course.tsc_id
		FROM teacher,teacher_select_course,course
		WHERE
		teacher.t_id=teacher_select_course.t_id
		AND
		teacher_select_course.c_id=course.c_id
		AND
		teacher.t_id=#{tId}
		AND course.c_id=#{cId}
	</select>
																														<!-- 添加含有ctid的发布作业 by:黎睿
																														<insert id="insterByctId" parameterType="com.cdtu.model.PublishWork">
																															INSERT INTO
																															publish_work(pw_id,ct_id,pw_name,pw_end,pw_state)
																															VALUES(#{pwId},#{ctId},#{pwName},#{pwEnd},#{pwState})
																														</insert>-->
																														<!-- 学生查询发布作业表通过课程号（cId） by:黎睿
																														<select id="selectStudentPublishWorkBycId" resultMap="BaseResultMap">
																														SELECT publishwork.*
																														FROM
																															(SELECT DISTINCT 
																															publish_work.*,class_create.ct_img_src as activityImgSrc
																															FROM student,student_select_course,publish_work,class_create
																															WHERE
																															student.s_id=student_select_course.s_id
																															AND
																															student_select_course.ct_id=class_create.ct_id
																															AND
																															student_select_course.ct_id=publish_work.ct_id	
																															AND
																															student.s_id=#{sId}
																															AND class_create.ct_id=#{cId}
																															UNION
																															SELECT DISTINCT 
																															publish_work.*,course.c_img_src as activityImgSrc
																															FROM student,student_select_course,publish_work,teacher_select_course,course
																															WHERE
																															student.s_id=student_select_course.s_id
																															AND
																															student_select_course.tsc_id=publish_work.tsc_id
																															AND
																															student_select_course.tsc_id=teacher_select_course.tsc_id
																															AND
																															teacher_select_course.c_id=course.c_id
																															AND
																															student.s_id=#{sId}
																															AND course.c_id=#{cId}
																															) publishwork
																															<if test="pwState!=null">
																																WHERE publishwork.pw_state=#{pwState}
																															</if>
																															LIMIT #{start}, #{end}
																														</select>-->
	<!-- 学生查询发布作业表通过c_id和s_id by:黎睿-->
	<select id="selectStudentPublishWorkBycId" resultMap="BaseResultMap">
		SELECT DISTINCT 
		publish_work.*,course.c_img_src as activityImgSrc,work.w_score as wScore
		FROM student,student_select_course,publish_work,teacher_select_course,course,work
		WHERE
		student.s_id=student_select_course.s_id
		AND
		student_select_course.tsc_id=publish_work.tsc_id
		AND
		student_select_course.tsc_id=teacher_select_course.tsc_id
		AND
		teacher_select_course.c_id=course.c_id
		AND
		publish_work.pw_id = work.pw_id
		AND
		student.s_id=#{sId}
		AND course.c_id=#{cId}
		<if test="pwState!=null">
			AND publish_work.pw_state=#{pwState}
		</if>
		LIMIT #{start}, #{end}
	</select>
	<!-- 学生查询发布作业表通过课程号（cId）数量 by:黎睿-->
	<select id="selectStudentPublishWorkCount" resultType="java.lang.Integer">
		SELECT COUNT(*)
		FROM
		(SELECT DISTINCT 
		publish_work.*
		FROM student,student_select_course,publish_work,teacher_select_course,course
		WHERE
		student.s_id=student_select_course.s_id
		AND
		student_select_course.tsc_id=publish_work.tsc_id
		AND
		student_select_course.tsc_id=teacher_select_course.tsc_id
		AND
		teacher_select_course.c_id=course.c_id
		AND
		student.s_id=#{sId}
		AND course.c_id=#{cId}
		) publishwork
		<if test="pwState!=null">
			WHERE publishwork.pw_state=#{pwState}
		</if>
	</select>
																														<!-- 学生查询发布作业表通过ct_id和s_id by:黎睿
																														<select id="selectStudentPublishWorkByctId" resultMap="BaseResultMap">
																															SELECT
																															publish_work.*
																															FROM student,student_select_course,publish_work
																															WHERE
																															student.s_id=student_select_course.s_id
																															AND
																															student_select_course.tsc_id=publish_work.tsc_id
																															AND
																															student.s_id=#{sId}
																															AND student_select_course.tsc_id=#{ctId}
																															<if test="pwState!=null">
																																AND publish_work.pw_state=#{pwState}
																															</if>
																															LIMIT #{start}, #{end}
																														</select>-->
																														<!-- 学生查询发布作业表通过课程号（cId）数量 by:黎睿
																														<select id="selectStudentPublishWorkCount" resultType="java.lang.Integer">
																															SELECT COUNT(*)
																															FROM
																															(SELECT DISTINCT 
																															publish_work.*
																															FROM student,student_select_course,publish_work,class_create
																															WHERE
																															student.s_id=student_select_course.s_id
																															AND
																															student_select_course.ct_id=class_create.ct_id
																															AND
																															student_select_course.ct_id=publish_work.ct_id	
																															AND
																															student.s_id=#{sId}
																															AND class_create.ct_id=#{cId}
																															UNION
																															SELECT DISTINCT 
																															publish_work.*
																															FROM student,student_select_course,publish_work,teacher_select_course,course
																															WHERE
																															student.s_id=student_select_course.s_id
																															AND
																															student_select_course.tsc_id=publish_work.tsc_id
																															AND
																															student_select_course.tsc_id=teacher_select_course.tsc_id
																															AND
																															teacher_select_course.c_id=course.c_id
																															AND
																															student.s_id=#{sId}
																															AND course.c_id=#{cId}
																															) publishwork
																															<if test="pwState!=null">
																																WHERE publishwork.pw_state=#{pwState}
																															</if>
																														</select>-->
																														<!-- 教师查询发布作业表通过课程号（cId） by:黎睿
																														<select id="selectTeacherPublishWorkBycId" resultMap="BaseResultMap">
																															SELECT publishwork.*
																															FROM
																															(SELECT DISTINCT
																															publish_work.*
																															FROM teacher,publish_work,class_create
																															WHERE
																															teacher.t_id=class_create.t_id
																															AND
																															class_create.ct_id=publish_work.ct_id	
																															AND
																															teacher.t_id=#{tId}
																															AND class_create.ct_id=#{cId}
																															UNION
																															SELECT DISTINCT 
																															publish_work.*
																															FROM teacher,publish_work,teacher_select_course,course
																															WHERE
																															teacher.t_id=teacher_select_course.t_id
																															AND
																															teacher_select_course.tsc_id=publish_work.tsc_id
																															AND
																															teacher_select_course.c_id=course.c_id
																															AND
																															teacher.t_id=#{tId}
																															AND course.c_id=#{cId}
																															) publishwork
																															<if test="pwState!=null">
																																WHERE publishwork.pw_state=#{pwState}
																															</if>
																															LIMIT #{start}, #{end}
																														</select>-->
																														<!-- 教师查询发布作业表通过c_id和t_id by:黎睿-->
	<select id="selectTeacherPublishWorkBycId" resultMap="BaseResultMap">
		SELECT DISTINCT 
		publish_work.*,course.c_img_src as activityImgSrc
		FROM teacher,publish_work,teacher_select_course,course
		WHERE
		teacher.t_id=teacher_select_course.t_id
		AND
		teacher_select_course.tsc_id=publish_work.tsc_id
		AND
		teacher_select_course.c_id=course.c_id
		AND
		teacher.t_id=#{tId}
		AND course.c_id=#{cId}
		<if test="pwState!=null">
			AND publish_work.pw_state=#{pwState}
		</if>
		LIMIT #{start}, #{end}
	</select>
	<!-- 教师查询发布作业表通过课程号（cId）数量 by:黎睿-->
	<select id="selectTeacherPublishWorkCount" resultType="java.lang.Integer">
		SELECT COUNT(*)
		FROM
		(
		SELECT DISTINCT 
		publish_work.*
		FROM teacher,publish_work,teacher_select_course,course
		WHERE
		teacher.t_id=teacher_select_course.t_id
		AND
		teacher_select_course.tsc_id=publish_work.tsc_id
		AND
		teacher_select_course.c_id=course.c_id
		AND
		teacher.t_id=#{tId}
		AND course.c_id=#{cId}
		) publishwork
		<if test="pwState!=null">
			WHERE publishwork.pw_state=#{pwState}
		</if>
	</select>
																														<!-- 教师查询发布作业表通过ct_id和s_id by:黎睿
																														<select id="selectTeacherPublishWorkByctId" resultMap="BaseResultMap">
																															SELECT
																															publish_work.*
																															FROM teacher,class_create,publish_work
																															WHERE
																															teacher.t_id=class_create.t_id
																															AND
																															class_create.ct_id=publish_work.ct_id
																															AND class_create.ct_id=#{ctId}
																															<if test="pwState!=null">
																																AND publish_work.pw_state=#{pwState}
																															</if>
																															LIMIT #{start}, #{end}
																														</select>-->
																														<!-- 教师查询发布作业表通过课程号（cId）数量 by:黎睿
																														<select id="selectTeacherPublishWorkCount" resultType="java.lang.Integer">
																															SELECT COUNT(*)
																															FROM
																															(SELECT DISTINCT
																															publish_work.*
																															FROM teacher,publish_work,class_create
																															WHERE
																															teacher.t_id=class_create.t_id
																															AND
																															class_create.ct_id=publish_work.ct_id	
																															AND
																															teacher.t_id=#{tId}
																															AND class_create.ct_id=#{cId}
																															UNION
																															SELECT DISTINCT 
																															publish_work.*
																															FROM teacher,publish_work,teacher_select_course,course
																															WHERE
																															teacher.t_id=teacher_select_course.t_id
																															AND
																															teacher_select_course.tsc_id=publish_work.tsc_id
																															AND
																															teacher_select_course.c_id=course.c_id
																															AND
																															teacher.t_id=#{tId}
																															AND course.c_id=#{cId}
																															) publishwork
																															<if test="pwState!=null">
																																WHERE publishwork.pw_state=#{pwState}
																															</if>
																														</select>-->
																														<!-- ct_id查询作业数量 by:黎睿
																														<select id="selectCountBypwStateBytscId" resultType="java.lang.Integer">
																															SELECT
																															COUNT(*)
																															FROM teacher,teacher_select_course,publish_work
																															WHERE
																															teacher.t_id=teacher_select_course.t_id
																															AND
																															teacher_select_course.tsc_id=publish_work.tsc_id
																															AND
																															teacher_select_course.tsc_id=#{tscId}
																															<if test="pwState!=null">
																																AND publish_work.pw_state=#{pwState}
																															</if>
																														</select>-->
																														<!-- tsc_id查询作业数量 by:黎睿
																														<select id="selectCountBypwStateByctId" resultType="java.lang.Integer">
																															SELECT
																															COUNT(*)
																															FROM teacher,class_create,publish_work
																															WHERE
																															teacher.t_id=class_create.t_id
																															AND
																															class_create.ct_id=publish_work.ct_id
																															AND class_create.ct_id=#{ctId}
																															<if test="pwState!=null">
																																AND publish_work.pw_state=#{pwState}
																															</if>
																														</select>-->
	<!-- 查询作业名字 by:黎睿-->
	<select id="selectPwIdname" parameterType="String" resultType="String">
		select pw_name from publish_work where pw_id=#{pwId}
	</select>
	<update id="changePublishWork" parameterType="com.cdtu.model.PublishWork" >
	 update publish_work
	 set
	 pw_state = #{pwState}
     where pw_id = #{pwId}
	</update>
	<!-- 文成start -->
	<select id="getAllPublishWorks" resultMap="BaseResultMap">
		select * from publish_work
	</select>
	<update id="updatePublishWorkState">
		UPDATE  publish_work SET pw_state =#{flag} WHERE pw_id=#{pwId}
	</update>
	<select id="getPwDetails" resultType="java.util.HashMap" >
		SELECT  DISTINCT pw.pw_name AS pwName,pw.pw_end as pwEnd ,c.c_img_src AS activityImgSrc,pw.pw_content AS pwContent,work.w_context AS wContent,work.w_problem AS wProblem,work.s_w_state AS sWState,work.w_remark as wRemark,work.w_score as wScore,pw.pw_score as pwScore
		FROM publish_work pw,student_select_course ssc ,teacher_select_course tsc,course c ,WORK
		WHERE
		ssc.s_id=#{sId}
		AND pw.pw_id = #{pwId}
		AND ssc.tsc_id=tsc.tsc_id
		AND tsc.tsc_id=pw.tsc_id
		AND tsc.c_id=c.c_id
		AND pw.pw_id=work.pw_id
		AND work.s_id=ssc.s_id
	</select>
	<select id="getTFiles" resultType="java.util.HashMap">
		SELECT DISTINCT  tf.t_f_add AS url,tf.t_f_name AS name ,tf.t_f_id AS tfId,tf.t_f_type AS TYPE,tf.t_f_state AS state
		FROM publish_work pw,student_select_course ssc,t_file tf,img_type it
		WHERE
		ssc.s_id=#{sId}
		AND pw.pw_id = #{pwId}
		AND ssc.tsc_id=pw.tsc_id
		AND pw.pw_id=tf.pw_id
		AND tf.t_f_type NOT IN (
			SELECT img_type.i_t_typt FROM img_type
		)
	</select>
	<select id="getSFiles" resultType="java.util.HashMap">
		SELECT  DISTINCT sf.s_f_add AS url,sf.s_f_name AS name ,sf.s_f_id AS sfId,sf.s_f_type AS type,sf.s_f_state AS state
		FROM publish_work pw,student_select_course ssc,WORK,s_file sf,img_type it
		WHERE
		ssc.s_id=#{sId}
		AND pw.pw_id = #{pwId}
		AND ssc.tsc_id=pw.tsc_id
		AND pw.pw_id=work.pw_id
		AND work.w_id=sf.w_id
		AND work.s_id=ssc.s_id
		AND sf.s_f_type NOT IN (
			SELECT img_type.i_t_typt FROM img_type
		)
	</select>
	<select id="countPublishWorks" resultType="java.lang.Integer">
		SELECT COUNT(*) 
		FROM course c,teacher_select_course tsc,publish_work pw
		WHERE c.c_id=#{cId}
		AND tsc.c_id=c.c_id
		AND pw.tsc_id=tsc.tsc_id
	</select>
	<select id="countPublishEstimates" resultType="java.lang.Integer">
		SELECT COUNT(*) 
		FROM course c,teacher_select_course tsc,publish_estimate pe
		WHERE c.c_id=#{cId}
		AND tsc.c_id=c.c_id
		AND pe.tsc_id=tsc.tsc_id
	</select>
	<select id="getTFilesImages" resultType="java.util.HashMap">
		SELECT DISTINCT  tf.t_f_add AS url,tf.t_f_name AS name ,tf.t_f_id AS tfId,tf.t_f_type AS type,tf.t_f_state AS state
		FROM publish_work pw,student_select_course ssc,t_file tf,img_type it
		WHERE
		ssc.s_id=#{sId}
		AND pw.pw_id = #{pwId}
		AND ssc.tsc_id=pw.tsc_id
		AND pw.pw_id=tf.pw_id
		AND tf.t_f_type IN (
			SELECT img_type.i_t_typt FROM img_type
		)
	</select>
	<select id="getSFilesImages" resultType="java.util.HashMap">
		SELECT  DISTINCT sf.s_f_add AS url,sf.s_f_name AS name ,sf.s_f_id AS sfId,sf.s_f_type AS type,sf.s_f_state AS state
		FROM publish_work pw,student_select_course ssc,WORK,s_file sf,img_type it
		WHERE
		ssc.s_id=#{sId}
		AND pw.pw_id = #{pwId}
		AND ssc.tsc_id=pw.tsc_id
		AND pw.pw_id=work.pw_id
		AND work.w_id=sf.w_id
		AND work.s_id=ssc.s_id
		AND sf.s_f_type IN (
			SELECT img_type.i_t_typt FROM img_type
		)
	</select>
	<!-- 文成end -->
</mapper>