<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cdtu.mapper.StudentMapper">
<!-- 文成start -->

	<resultMap type="com.cdtu.model.Student" id="getStudentBysIdAndsPassword">
		<id column="s_id" property="sId"/>
		<result column="s_name" property="sName"/> 
		<result column="s_major" property="sMajor"/>
		<result column="s_password" property="sPassword"/>
	</resultMap>
	<select id="getStudentBysIdAndsPassword" parameterType="com.cdtu.model.Role" 
	resultType="java.util.HashMap">
		SELECT S_ID AS userName,s_name as name,s_img_src as userImgSrc,s_major as userMajor,s_email as userEmail,s_phone as userPhone
		FROM STUDENT 
		WHERE S_ID =#{username,jdbcType=VARCHAR}
	</select>
	
	<select id="selectPasswordById" parameterType="java.lang.String" resultType="java.lang.String">
  		SELECT s_password
  		FROM student
  		WHERE s_id = #{id}
  	</select>
  	
	<update id="updatasPasswordBysId" parameterType="com.cdtu.model.Role">
		UPDATE STUDENT 
		SET S_PASSWORD =#{newPassword,jdbcType=VARCHAR}
	    WHERE S_ID=#{username,jdbcType=VARCHAR}
	</update>
	<update id="updataAvatar">
		update student
		set s_img_src=#{sImgSrc}
		where s_id=#{sId}
	</update>
	<select id="fuzzySearchStudentByNameOrId" resultType="java.util.HashMap">
		SELECT DISTINCT sName as value ,sId
		FROM secondView  
		WHERE sId LIKE '%${nameOrId}%'
			OR sName LIKE '%${nameOrId}%'
	</select>
	<select id="SearchStudentById" resultType="java.util.HashMap">
		SELECT DISTINCT * 
		FROM secondView
		WHERE sId = #{sId}
	</select>
	<select id="CreatStudentTableDescRank">
		drop table if exists secondView;
		CREATE TEMPORARY TABLE firstView (sId VARCHAR(10) NOT NULL,sName VARCHAR(10) NOT NULL,sImgSrc TEXT NOT NULL,sumScore INT(3)NOT NULL);
		INSERT INTO firstView(sId,sName,sImgSrc,sumScore)
		SELECT  w.s_id AS sId,s.s_name AS sName,s.s_img_src AS sImgSrc ,SUM(w.w_score) AS sumScore
			FROM WORK w,student s
				WHERE w.s_id IN (
					SELECT   s.s_id 
					FROM student s,course c,teacher_select_course tsc,student_select_course ssc,publish_work pw,WORK w
					WHERE
					tsc.t_id=#{tId}
					AND tsc.c_id=#{cId}
					AND ssc.tsc_id=tsc.tsc_id
					AND s.s_id=ssc.s_id
					AND pw.tsc_id=tsc.tsc_id
					AND w.pw_id=pw.pw_id
					AND w.s_id=s.s_id
					GROUP BY  s.s_id 
				)
				AND w.s_id=s.s_id
				GROUP BY w.s_id;
	
		CREATE   TEMPORARY TABLE secondView (sId VARCHAR(10) NOT NULL,sName VARCHAR(10) NOT NULL,sImgSrc TEXT NOT NULL,sumScore INT(3)NOT NULL,rank INT(3)NOT NULL, PRIMARY KEY (sId));
		INSERT INTO secondView(sId,sName,sImgSrc,sumScore,rank)
		 SELECT firstView.sId,firstView.sName,firstView.sImgSrc,firstView.sumScore ,firstView.rank FROM
		 (SELECT sId,sName,sImgSrc,sumScore ,
		 @curRank := IF (@prevRank = sumScore, @curRank, @incRank) AS rank,
		 @incRank := @incRank + 1,@prevRank := sumScore
		 FROM firstView p,
		(SELECT @curRank :=0, @prevRank := NULL, @incRank := 1) r 
		 ORDER BY sumScore DESC) firstView;
		DROP TABLE firstView;
	</select>
	<select id="selectStudents" resultType="java.util.HashMap">
		SELECT DISTINCT * FROM secondView ORDER BY secondView.sumScore DESC LIMIT #{start}, #{end}
	</select>
	<update id="updateRoleInfo">
		UPDATE student s 
		SET s.s_email= #{email} ,s.s_phone =#{phone} 
  		WHERE s.s_id =#{username};
	</update>
	<!-- 文成end -->
	
	
	
	<select id="selectStudentName" resultType="java.lang.String">
		select s_name
		from student
		where s_id=#{id}
	</select>
	
	
	
	
</mapper>