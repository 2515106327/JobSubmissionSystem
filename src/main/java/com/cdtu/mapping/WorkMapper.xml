<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cdtu.mapper.WorkMapper">
	<resultMap id="BaseResultMap" type="com.cdtu.model.Work">
		<id column="w_id" property="id" jdbcType="CHAR" />
		<result column="pw_id" property="pwId" jdbcType="CHAR" />
		<result column="w_time" property="wTime" jdbcType="DATE" />
		<result column="w_context" property="wContext"
			jdbcType="VARCHAR" />
		<result column="w_addr" property="wAddr" jdbcType="VARCHAR" />
		<result column="w_problem" property="wProblem"
			jdbcType="VARCHAR" />
		<result column="w_remark" property="wRemark" jdbcType="VARCHAR" />
		<result column="s_w_state" property="sWState" jdbcType="BIT" />
		<result column="s_id" property="sId" jdbcType="BIT" />
	</resultMap>

	<!-- 文成start -->
	<select id="fuzzySearchWorkBySidAndCid"
		parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT pw.pw_name as
		value
		FROM publish_work pw,student_select_course ssc,course
		c,teacher_select_course tsc
		WHERE
		ssc.s_id=#{sId}
		AND pw.pw_name LIKE
		'%${pwName}%'
		AND ssc.tsc_id=tsc.tsc_id
		AND tsc.c_id=c.c_id
		AND
		c.c_id=#{cId}
		AND ssc.tsc_id=pw.tsc_id
	</select>

	<select id="fuzzySearchWorkByTidAndCid"
		resultType="java.util.HashMap">
		SELECT DISTINCT pw.pw_name as value
		FROM publish_work
		pw,teacher_select_course tsc,course c
		WHERE
		tsc.t_id=#{tId}
		AND
		pw.pw_name LIKE '%${pwName}%'
		AND tsc.c_id=c.c_id
		AND c.c_id=#{cId}
		AND
		tsc.tsc_id=pw.tsc_id
	</select>

	<select id="SearchPwByPwName" resultType="java.util.HashMap">
		SELECT COUNT(w.pw_id) AS finishedNum ,pw.pw_id AS pwId,pw.tsc_id AS cId,pw.pw_name AS pwName,pw.pw_end AS
		pwEnd,pw.pw_state AS pwState,pw.pw_img_src AS activityImgSrc
		FROM WORK w,publish_work pw
		WHERE
		w.s_id IN(SELECT DISTINCT w.s_id
			FROM student_select_course ssc ,teacher_select_course tsc ,course c,publish_work pw,WORK w
			WHERE 
			ssc.tsc_id=tsc.tsc_id
			AND tsc.c_id=c.c_id
			AND pw.tsc_id=tsc.tsc_id
			AND pw.pw_id=w.pw_id
			AND tsc.t_id= #{tId}
			AND c.c_id=#{cId}
			)
		AND pw.pw_id=w.pw_id
		AND pw.pw_name=#{pwName}
		GROUP BY w.pw_id
	</select>

	<select id="SsearchPwByPwName" resultType="java.util.HashMap">
	SELECT COUNT(w.pw_id) AS finishedNum ,pw.pw_id AS pwId,pw.tsc_id AS cId,pw.pw_name AS pwName,pw.pw_end AS
		pwEnd,pw.pw_state AS pwState,pw.pw_img_src AS activityImgSrc,w.w_score as wScore,pw.pw_score as pwScore
		FROM WORK w,publish_work pw
		WHERE
		w.s_id IN(SELECT DISTINCT w.s_id
			FROM student s,student_select_course ssc ,teacher_select_course tsc ,course c,publish_work pw,WORK w
		WHERE 
		ssc.tsc_id=tsc.tsc_id
		AND tsc.c_id=c.c_id
		AND pw.tsc_id=tsc.tsc_id
		AND pw.pw_id=w.pw_id
		AND s.s_id=#{sId}
		AND c.c_id=#{cId}	
		)
		AND pw.pw_id=w.pw_id
		AND w.s_w_state=1
		AND pw.pw_name=#{pwName}
		GROUP BY w.pw_id
	</select>
	<!-- 文成end -->

	<!-- 查询作业数量 by:黎睿 -->
	<select id="selectWorkCount" resultType="java.lang.Integer">
		SELECT COUNT(*)
		FROM
		student,WORK,publish_work
		WHERE student.s_id=work.s_id
		AND
		publish_work.pw_id=work.pw_id
		AND student.s_id=#{sId}
		AND
		publish_work.pw_id=#{pwId}
	</select>

	<!-- 查询作业by:黎睿 -->
	<select id="selectWork" resultMap="BaseResultMap">
		SELECT work.*
		FROM
		student,WORK,publish_work
		WHERE student.s_id=work.s_id
		AND
		publish_work.pw_id=work.pw_id
		AND student.s_id=#{sId}
		AND
		publish_work.pw_id=#{pwId}
	</select>

	<!-- 添加作业 by:黎睿 -->
	<insert id="insertWork" parameterType="com.cdtu.model.Work">
		INSERT INTO
		WORK(w_id,pw_id,w_time,w_context,w_problem,s_id)
		VALUES(#{id},#{pwId},#{wTime},#{wContext},#{wProblem},#{sId})
	</insert>

	<!-- 学生修改作业 by:黎睿 -->
	<update id="studentUpdateWork"
		parameterType="com.cdtu.model.Work">
		UPDATE WORK
		SET
		w_time=#{wTime},w_context=#{wContext},w_problem=#{wProblem},s_w_state=#{sWState}
		WHERE
		pw_id=#{pwId} AND s_id=#{sId}
	</update>

	<!-- 教师批改作业 by:黎睿 -->
	<update id="teacherUpdateWork">
		UPDATE WORK
		SET w_remark=#{wRemark}
		WHERE pw_id=#{pwId}
		AND s_id=#{sId}
	</update>

	<!-- 设置文件地址 by:黎睿 -->
	<update id="updateWorkFlieStudent">
		UPDATE WORK
		SET w_addr=#{wAddr}
		WHERE pw_id=#{pwId} AND
		s_id=#{sId}
	</update>

	<!-- 获取文件地址 by:黎睿 -->
	<select id="selectWorkFlieStudent" resultType="java.lang.String">
		SELECT work.w_addr
		FROM student,WORK,publish_work
		WHERE student.s_id=work.s_id
		AND
		publish_work.pw_id=work.pw_id
		AND student.s_id=#{sId}
		AND
		publish_work.pw_id=#{pwId}
	</select>
	
    <insert id="insertTeacherFilewAddr" >
    	INSERT INTO t_file(pw_id,t_f_add,t_f_name,t_f_type,t_f_state)
		VALUES(#{pwId},#{wAddr},#{filename},#{type},#{state})
    </insert>
    
    <delete id="deleteTeacherFile" parameterType="java.lang.Integer">
    	delete from t_file where t_f_id=#{tfId}
    </delete>	
    
	<delete id="deleteStudentFile" parameterType="java.lang.Integer">
    	delete from s_file where s_f_id=#{sfId}
    </delete>	

	<!-- 李红兵start -->
	<select id="selectAverScore" resultType="java.lang.Double">
		SELECT ROUND(AVG(IF(work.s_w_state, w_score, 0)), 2)
		FROM teacher_select_course, publish_work, work
		WHERE teacher_select_course.c_id = #{cId}
		AND publish_work.tsc_id = teacher_select_course.tsc_id
		AND work.pw_id = publish_work.pw_id
		AND work.s_id = #{sId}
	</select>

	<select id="selectSubInfo" resultType="java.util.HashMap">
		DROP TEMPORARY TABLE IF EXISTS work_info;
		CREATE TEMPORARY TABLE work_info(to_submit INT(3), submitted INT(3));
		INSERT INTO work_info(to_submit)
		SELECT COUNT(*)
		FROM teacher_select_course, publish_work, student_select_course
		WHERE teacher_select_course.c_id = #{cId}
		AND publish_work.tsc_id = teacher_select_course.tsc_id
		AND student_select_course.tsc_id = teacher_select_course.tsc_id
		AND student_select_course.s_id = #{sId};
		UPDATE work_info INNER JOIN(
		SELECT COUNT(*) AS submitted
		FROM teacher_select_course, publish_work, work
		WHERE teacher_select_course.c_id = #{cId}
		AND publish_work.tsc_id = teacher_select_course.tsc_id
		AND work.pw_id = publish_work.pw_id
		AND work.s_id = #{sId}
		AND work.s_w_state = 1) s
		SET work_info.submitted = s.submitted;
		SELECT to_submit AS toSubmit, submitted FROM work_info;
		DROP TEMPORARY TABLE IF EXISTS work_info
	</select>

	<select id="selSubCon" resultType="java.util.HashMap">
		DROP TEMPORARY TABLE IF EXISTS stu_id;
		CREATE TEMPORARY TABLE stu_id (s_id VARCHAR(10));
		INSERT INTO stu_id(s_id) SELECT work.s_id
		FROM work, publish_work WHERE work.pw_id = publish_work.pw_id;
		SELECT student.s_id AS sId, student.s_name AS sName, student.s_id IN (SELECT * FROM stu_id) AS submitted
		FROM student_select_course, publish_work, student
		WHERE publish_work.pw_id = #{pwId}
		AND publish_work.tsc_id = student_select_course.tsc_id
		AND student.s_id = student_select_course.s_id;
		DROP TEMPORARY TABLE IF EXISTS stu_id
	</select>

	<select id="selAllWorks" resultType="java.util.HashMap">
		DROP TEMPORARY TABLE IF EXISTS stu_id;
		CREATE TEMPORARY TABLE stu_id (s_id VARCHAR(10));
		INSERT INTO stu_id(s_id) SELECT work.s_id
		FROM work, publish_work WHERE work.pw_id = publish_work.pw_id;
		SELECT publish_work.pw_id AS pwId, publish_work.pw_name AS pwName, publish_work.pw_end AS pwEnd,
		publish_work.pw_state AS pwState, #{sId} IN (SELECT * FROM stu_id) AS submitted
		FROM student_select_course, publish_work
		WHERE student_select_course.s_id = #{sId}
		AND student_select_course.tsc_id = publish_work.tsc_id;
		DROP TEMPORARY TABLE IF EXISTS stu_id
	</select>

	<select id="selByDateSection" resultType="java.lang.Integer">
		SELECT work.w_score AS wScore
		FROM WORK, publish_work, teacher_select_course
		WHERE work.s_id = #{sId}
		AND publish_work.pw_id = work.pw_id
		AND teacher_select_course.tsc_id = publish_work.tsc_id
		AND teacher_select_course.c_id = #{cId}
		AND work.w_time BETWEEN #{start} AND #{end}
		ORDER BY work.w_time ASC
	</select>
	
	<select id="selectMyWorkInfo" resultType="java.util.HashMap">
		SELECT work.w_score AS value, publish_work.pw_name AS name
		FROM work, publish_work, teacher_select_course
		WHERE teacher_select_course.c_id = #{cId}
		AND publish_work.tsc_id = teacher_select_course.tsc_id
		AND work.pw_id = publish_work.pw_id
		AND work.s_id = #{sId}
	</select>
	<!-- 李红兵end -->
	
	<insert id="insertWorks" parameterType="String">
		INSERT INTO
		WORK(w_id,pw_id,s_id)
		VALUES(#{wId},#{pwId},#{sId})
	</insert>
	
	<select id="selectwId" parameterType="String" resultType="String">
		select work.w_id AS wId 
		from work
		where s_id=#{sId} and pw_id=#{pwId}
	</select>

	<insert id="insertStudentFilewAddr" >
    	INSERT INTO s_file(w_id,s_f_add,s_f_name,s_f_type,s_f_state)
		VALUES(#{wId},#{wAddr},#{filename},#{type},#{state})
    </insert>
    
	<select id="selecttfName" resultType="String">
		select t_f_name AS tfName from t_file where t_f_add=#{tfAdd}
		union
		select s_f_name AS sfName from s_file where s_f_add=#{tfAdd}
	</select>
	
	<select id="selectsfName" resultType="String">
		select s_f_name AS sfName from s_file where s_f_add=#{sfAdd}
	</select>
	
	<select id="selectWorkAllAddr" resultType="java.util.HashMap">
		SELECT work.w_id ,s_file.`s_f_add`,s_file.`s_f_name`,student.`s_name`,student.`s_id`,publish_work.`pw_name`
		FROM WORK,s_file,student,publish_work
		WHERE
		work.`pw_id`=#{pwId}
		AND work.`w_id`=s_file.`w_id`
		AND student.`s_id`=work.`s_id`
		AND work.`pw_id`=publish_work.`pw_id`
	</select>
	
	<select id="selectWorkId" resultType="java.util.HashMap">
		SELECT  DISTINCT work.w_id ,student.`s_name`,student.`s_id`,publish_work.`pw_name`,course.`c_name`
		FROM WORK,s_file,student,publish_work,teacher_select_course,course
		WHERE
		work.`pw_id`=#{pwId}
		AND work.`w_id`=s_file.`w_id`
		AND student.`s_id`=work.`s_id`
		AND work.`pw_id`=publish_work.`pw_id`
		AND publish_work.`tsc_id`=teacher_select_course.`tsc_id`
		AND teacher_select_course.`c_id`=course.`c_id`
	</select>
	
	<select id="selectcName" resultType="java.util.HashMap">
		SELECT  DISTINCT publish_work.`pw_name`,course.`c_name`
		FROM publish_work,teacher_select_course,course
		WHERE
		publish_work.`pw_id`=1
		AND publish_work.`tsc_id`=teacher_select_course.`tsc_id`
		AND teacher_select_course.`c_id`=course.`c_id`
	</select>
	
	<update id="teacherupdatework" parameterType="java.util.HashMap">
		UPDATE WORK SET w_remark=#{map.wRemark}
		<if test="map.wScore!=null">
		,w_score=#{map.wScore},
		t_w_state=1
		</if>
		WHERE w_id=#{map.wId}
	</update>
	
	<resultMap type="java.util.HashMap" id="team">
		<id column="ep_id" property="epId" />
		<collection property="eSppeedList" javaType="List" ofType="java.util.HashMap" autoMapping="true">
		<id column="e_speed" property="stareSppeed"/>
		<result column="e_speeds" property="numeSpeed"/>
		</collection>
		<collection property="eFeelsList" javaType="List" ofType="java.util.HashMap" autoMapping="true">
		<id column="e_feel" property="stareFeels" />
	    <result column="e_feels" property="numeFeels" />
		</collection>
		<collection property="eDifficultsList" javaType="List" ofType="java.util.HashMap" autoMapping="true">
		<id column="e_difficult" property="stareDifficults"/>
		<result column="e_difficults" property="numeDifficults" />
		</collection>
	</resultMap>
	
	<select id="selectestimate" resultMap="team">
		SELECT A.ep_id,A.e_speeds,A.e_speed,B.e_feels,C.e_difficult,B.e_feel,C.e_difficults
		FROM
		(SELECT ep_id,e_speed AS e_speed,COUNT(e_speed) AS e_speeds
		FROM estimate
		WHERE ep_id=#{epId}
		GROUP BY e_speed) AS A,
		(SELECT ep_id,e_feel AS e_feel,COUNT(e_feel)AS e_feels
		FROM estimate
		WHERE ep_id=#{epId}
		GROUP BY e_feel) AS B,
		(SELECT ep_id,e_difficult AS e_difficult,COUNT(e_difficult)AS e_difficults
		FROM estimate
		WHERE ep_id=#{epId}
		GROUP BY e_feel) AS C
	</select>
</mapper>